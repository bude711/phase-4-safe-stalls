{"version":3,"sources":["styles/Box.js","styles/Button.js","styles/FormField.js","styles/Input.js","styles/Label.js","styles/Textarea.js","styles/Error.js","components/NavBar.js","components/LoginForm.js","components/SignUpForm.js","pages/Login.js","pages/NewBathroom.js","pages/ReviewForm.js","pages/LocationList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Box","styled","div","COLORS","primary","secondary","ButtonBase","button","FillButton","OutlineButton","Button","Component","variant","color","props","style","FormField","Input","input","Label","label","Textarea","textarea","Wrapper","Alert","span","Message","p","Error","children","header","Logo","h1","Nav","nav","NavBar","user","setUser","to","as","Link","onClick","fetch","method","then","r","ok","LoginForm","onLogin","useState","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","onSubmit","e","preventDefault","headers","body","JSON","stringify","json","err","htmlFor","type","id","autoComplete","value","onChange","target","map","error","SignUpForm","firstName","setFirstName","lastName","setLastName","passwordConfirmation","setPasswordConfirmation","imageUrl","setImageUrl","bio","setBio","first_name","last_name","password_confirmation","image_url","rows","section","Divider","hr","Login","showLogin","setShowLogin","WrapperChild","NewBathroom","onAddBathrooms","city","setCity","name","setName","address","setAddress","details","setDetails","useNavigate","newLocation","ReviewForm","review","onChangeForm","onAddReviews","onEditReview","comment","setComment","rating","setRating","handleInputChange","event","newReview","className","placeholder","Location","article","LocationList","locations","setLocations","setReviews","useEffect","length","location","reviews","comments","filter","onAddBathroom","App","setBathrooms","path","element","newBathrooms","bathrooms","newReviews","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb4879c3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Box = styled.div`\n  border-radius: 6px;\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%),\n    0 0 0 1px rgb(10 10 10 / 2%);\n  padding: 16px;\n`;\n\nexport default Box;\n","import styled from \"styled-components\";\n\nconst COLORS = {\n  primary: {\n    \"--main\": \"indigo\",\n    \"--accent\": \"white\",\n  },\n  secondary: {\n    \"--main\": \"lavenderblush\",\n    \"--accent\": \"indigo\",\n  },\n};\n\nfunction Button({ variant = \"fill\", color = \"primary\", ...props }) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n\n  return <Component style={COLORS[color]} {...props} />;\n}\n\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n`;\n\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\n\nexport default Button;\n","import styled from \"styled-components\";\n\nconst FormField = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport default FormField;\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  color: #363636;\n  display: block;\n  font-size: 1rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n`;\n\nexport default Label;\n","import styled from \"styled-components\";\n\nconst Textarea = styled.textarea`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n  resize: none;\n`;\n\nexport default Textarea;\n","import styled from \"styled-components\";\n\nfunction Error({ children }) {\n  return (\n    <Wrapper>\n      <Alert>!</Alert>\n      <Message>{children}</Message>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  color: red;\n  background-color: mistyrose;\n  border-radius: 6px;\n  display: flex;\n  padding: 8px;\n  align-items: center;\n  gap: 8px;\n  margin: 8px 0;\n`;\n\nconst Alert = styled.span`\n  background-color: white;\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  font-weight: bold;\n  display: grid;\n  place-content: center;\n`;\n\nconst Message = styled.p`\n  margin: 0;\n`;\n\nexport default Error;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Button } from \"../styles\";\n\nfunction NavBar({ user, setUser }) {\n  \n  function handleLogoutClick() {\n    fetch(\"/api/logout\", { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n      }\n    });\n  }\n\n  return (\n    <Wrapper>\n      <Logo>\n        <Link to=\"/api/\">Safe Stalls</Link>\n      </Logo>\n      <Nav>\n      <Button as={Link} to=\"/api/locations\">\n          Home\n        </Button>\n        <Button as={Link} to=\"/api/new\">\n          Add New Bathroom\n        </Button>\n        <Button variant=\"outline\" onClick={handleLogoutClick}>\n          Logout\n        </Button>\n      </Nav>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n`;\n\nconst Logo = styled.h1`\n  font-family: \"Permanent Marker\", cursive;\n  font-size: 3rem;\n  color: deeppink;\n  margin: 0;\n  line-height: 1;\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  gap: 4px;\n  position: absolute;\n  right: 8px;\n`;\n\nexport default NavBar;","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  \n  const [errors, setErrors] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password}),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormField>\n\n      <FormField>\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </Button>\n      </FormField>\n\n      <FormField>\n\n      {errors && errors.map(error => {\n          return <Error key={error}>{error}</Error>;\n        })}\n        {/* {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))} */}\n      </FormField>\n    </form>\n  );\n}\n\nexport default LoginForm;","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\n\nfunction SignUpForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/api/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        first_name: firstName,\n        last_name: lastName,\n        password_confirmation: passwordConfirmation,\n        image_url: imageUrl,\n        bio,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      \n      <FormField>\n        <Label htmlFor=\"firstName\">First Name</Label>\n        <Input\n          type=\"text\"\n          id=\"firstName\"\n          autoComplete=\"off\"\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"lastName\">Last Name</Label>\n        <Input\n          type=\"text\"\n          id=\"lastName\"\n          autoComplete=\"off\"\n          value={lastName}\n          onChange={(e) => setLastName(e.target.value)}\n        />\n      </FormField>\n\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      \n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password Confirmation</Label>\n        <Input\n          type=\"password\"\n          id=\"password_confirmation\"\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"imageUrl\">Profile Image</Label>\n        <Input\n          type=\"text\"\n          id=\"imageUrl\"\n          value={imageUrl}\n          onChange={(e) => setImageUrl(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"bio\">Bio</Label>\n        <Textarea\n          rows=\"3\"\n          id=\"bio\"\n          value={bio}\n          onChange={(e) => setBio(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default SignUpForm;","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport LoginForm from \"../components/LoginForm\";\nimport SignUpForm from \"../components/SignUpForm\";\nimport { Button } from \"../styles\";\n\nfunction Login({ onLogin }) {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <Wrapper>\n      <Logo>Safe Stalls</Logo>\n      {showLogin ? (\n        <>\n          <LoginForm onLogin={onLogin} />\n          <Divider />\n          <p>\n            Don't have an account? &nbsp;\n            <Button color=\"secondary\" onClick={() => setShowLogin(false)}>\n              Sign Up\n            </Button>\n          </p>\n        </>\n      ) : (\n        <>\n          <SignUpForm onLogin={onLogin} />\n          <Divider />\n          <p>\n            Already have an account? &nbsp;\n            <Button color=\"secondary\" onClick={() => setShowLogin(true)}>\n              Log In\n            </Button>\n          </p>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Logo = styled.h1`\n  font-family: \"Permanent Marker\", cursive;\n  font-size: 3rem;\n  color: deeppink;\n  margin: 8px 0 16px;\n`;\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 40px auto;\n  padding: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin: 16px 0;\n`;\n\nexport default Login;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Button, Error, FormField, Input, Label, Textarea } from \"../styles\";\n\nfunction NewBathroom({ onAddBathrooms, user }) {\n  const [city, setCity] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/api/locations\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        city,\n        address,\n        details,\n        name,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((newLocation) => {\n          setCity(\"\");\n          setName(\"\");\n          setAddress(\"\");\n          setDetails(\"\");\n          setErrors([]);\n          onAddBathrooms(newLocation);\n        });\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n  //     if (r.ok) {\n  //       navigate.push(\"/\");\n  //     } else {\n  //       r.json().then((err) => setErrors(err.errors));\n  //     }\n  //   });\n  // }\n\n  return (\n    <Wrapper>\n      <WrapperChild>\n        <form onSubmit={handleSubmit}>\n        <h2>Create Location</h2>\n          <FormField>\n            <Label htmlFor=\"city\">City</Label>\n            <Input\n              type=\"text\"\n              id=\"city\"\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n            />\n          </FormField>\n          <FormField>\n            <Label htmlFor=\"name\">Business Name</Label>\n            <Input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </FormField>\n          <FormField>\n            <Label htmlFor=\"address\">Address</Label>\n            <Textarea\n              id=\"address\"\n              rows=\"10\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </FormField>\n          <FormField>\n            <Label htmlFor=\"details\">Details</Label>\n            <Textarea\n              id=\"details\"\n              rows=\"10\"\n              value={details}\n              onChange={(e) => setDetails(e.target.value)}\n            />\n          </FormField>\n          <FormField>\n            <Button color=\"primary\" type=\"submit\">\n              {isLoading ? \"Loading...\" : \"Submit Location\"}\n            </Button>\n          </FormField>\n          <FormField>\n            {errors.map((err) => (\n              <Error key={err}>{err}</Error>\n            ))}\n          </FormField>\n        </form>\n      </WrapperChild>\n      {/* <WrapperChild>\n        <h1>{city}</h1>\n        <p>\n          <em>{name} </em>\n          <em>{address} </em>\n          <em>{details} </em>\n          &nbsp;·&nbsp;\n          {/* <cite>Submitted By {user.username}</cite> */}\n        {/* </p> */}\n      {/* // </WrapperChild> */} \n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default NewBathroom;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, Error, FormField, Input, Label, Textarea } from \"../styles\";  \n\nfunction ReviewForm({ review, onChangeForm, onEditReview, onAddReviews }) {\n    const [comment, setComment] = useState(\"\");\n    const [rating, setRating] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n  function handleInputChange(event) {\n    onChangeForm(event.target.name, event.target.value);\n  }\n\n\n\n  function handleSubmit(e, id) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(`/api/locations/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        comment,\n        rating,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((newReview) => {\n          setComment(\"\");\n          setRating(\"\");\n          setErrors([]);\n          onAddReviews(newReview);\n        });\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n\n\n//   function handleReviewChange(event, id) {\n//     event.preventDefault();\n//     fetch(`./locations/${id}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(review),\n//     })\n//       .then((r) => r.json())\n//       .then(onEditReview);\n//   }\n\n//   if (!review) return null;\n\n//   const { comment, rating } = review;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-row\">\n        <div className=\"col-5\">\n       \n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"comment\"\n            name=\"comment\"\n            value={comment}\n            onChange={handleInputChange}\n          />\n       \n        </div>\n        <p></p>\n        <div className=\"col\">\n        <input\n            type=\"number\"\n            className=\"form-control\"\n            placeholder=\"rating\"\n            name=\"rating\"\n            value={rating}\n            onChange={handleInputChange}\n          />\n        </div>\n        \n        </div>\n        <div className=\"col\">\n            <p></p>\n          <button type=\"submit\" className=\"btn btn-success\">\n            Add Review\n          </button>\n          &nbsp;&nbsp;\n          <button type=\"submit\" className=\"btn btn-success\">\n            Update Review\n          </button>\n        </div>\n    </form>\n  );\n}\n\nexport default ReviewForm;","import { useEffect, useState } from \"react\";\nimport { Link , Route, Routes} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Box, Button } from \"../styles\";\nimport NewBathroom from \"../pages/NewBathroom\";\nimport ReviewForm from \"../pages/ReviewForm\";\n\n\nfunction LocationList() {\n  const [locations, setLocations] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n\n  useEffect(() => {\n    fetch(\"/api/locations\")\n      .then((r) => r.json())\n      .then(setLocations);\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/reviews\")\n      .then((r) => r.json())\n      .then(setReviews);\n  }, []);\n\n  function handleAddBathroom(newLocation) {\n    setLocations((locations) => [...locations, newLocation]);\n  }\n\n   function handleDeleteLocation(id) {\n    fetch(`/api/locations/${id}`, {\n      method: \"DELETE\",\n    }).then((r) => {\n      if (r.ok) {\n        setLocations((locations) =>\n          locations.filter((location) => location.id !== id)\n        );\n      }\n    });\n  }\n\n  function handleEditReview(updatedReview) {\n    const updatedReviews = reviews.map((review) =>\n      review.id === updatedReview.id ? updatedReview : review\n    );\n    setReviews(updatedReviews);\n  }\n\n  return (\n    <Wrapper>\n      {locations.length > 0 ? (\n        locations.map((location) => (\n          <Location key={location.id}>\n            <Box>\n              <h2>{location.city}</h2>\n              <h3>{location.name}</h3>\n              <em>{location.address}</em>\n              <em>{location.details}</em>\n       \n            \n              {/* <p> <cite>Submitted By: </cite> </p> */}\n              <h4>Reviews:</h4>\n\n    \n\n              <ul>\n                  {location.reviews.map((review) => (\n                  <li key={review.id}>\n                    {review.comments} &nbsp;·&nbsp; Rating: {review.rating}/10\n                </li>\n                  ))}\n              </ul>\n            <p>\n              <ReviewForm\n              // review={selectedPizza}\n              // onChangeForm={handleChangeForm}\n              // onEditReview={handleEditReview}\n            />\n            </p>\n\n            <Button onClick={() => handleDeleteLocation(location.id)}>\n              Delete Bathroom \n            </Button>\n           \n      \n\n            </Box>\n          </Location>\n\n            \n        ))\n      ) : (\n        <>\n          <h2>No Bathrooms Found</h2>\n\n         \n       \n          <NewBathroom onAddBathroom={handleAddBathroom}/>\n          \n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.section`\n  max-width: 800px;\n  margin: 40px auto;\n`;\n\nconst Location= styled.article`\n  margin-bottom: 24px;\n`;\n\nexport default LocationList;\n","import React, { useEffect, useState } from \"react\";\nimport { Routes, Route} from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Login from \"../pages/Login\";\nimport LocationList from \"../pages/LocationList\";\nimport NewBathroom from \"../pages/NewBathroom\";\nimport ReviewForm from \"../pages/ReviewForm\"\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [bathrooms, setBathrooms]= useState([]);\n\n  const [reviews, setReviews]= useState([]);\n\n  useEffect(() => {\n    // auto-login\n    fetch(\"/api/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  if (!user) return <Login onLogin={setUser} />;\n\n  function handleAddBathrooms(newBathrooms) {\n    setBathrooms((bathrooms) => [...bathrooms, newBathrooms]);\n  }\n\n  function handleAddReviews(newReviews) {\n    setReviews((reviews) => [...reviews, newReviews]);\n  }\n\n  return (\n    <>\n      <NavBar user={user} setUser={setUser} />\n      <main>\n        <Routes>\n          <Route path=\"/api/locations\" element = {<LocationList />}>\n          </Route>\n          <Route path=\"/api/new\" element = {<NewBathroom onAddBathrooms={handleAddBathrooms} user={user}/>}>\n          </Route>\n\n          <Route path=\"/api/reviews\" element = {<ReviewForm onAddReviews={handleAddReviews}/>}>\n          </Route>\n        </Routes>\n      </main>\n\n     \n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before, \n  *::after {\n    box-sizing: border-box;\n  }\n\n  html, body {\n    margin: 0;\n  }\n\n  body {\n    font-family: BlinkMacSystemFont,-apple-system,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <BrowserRouter>\n    <GlobalStyle />\n    <App />\n    </BrowserRouter>,\n  /* </React.StrictMode>, */\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}